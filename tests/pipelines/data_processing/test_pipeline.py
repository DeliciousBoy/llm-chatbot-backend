import pytest
from llm_chatbot_backend.pipelines.data_processing.nodes import (
    build_rag_context,
    clean_text,
    process_text,
)


@pytest.mark.parametrize(
    "text,expected",
    [
        ("‡∏°‡∏≤‡∏Å‡∏Å‡∏Å", "‡∏°‡∏≤‡∏Å‡∏Å"),  # ‡∏•‡∏î‡∏≠‡∏±‡∏Å‡∏©‡∏£‡πÑ‡∏ó‡∏¢‡∏ã‡πâ‡∏≥
        ("https://example.com", ""),  # ‡∏•‡∏ö URL
        ("‡πÄ‡∏®‡∏£‡πâ‡∏≤‡∏≤ü•≤", "‡πÄ‡∏®‡∏£‡πâ‡∏≤"),  # ‡∏•‡∏ö emoji
        ("   ", ""),  # ‡∏•‡∏ö whitespace
    ],
)
def test_clean_text(text, expected):
    assert clean_text(None) == ""
    assert clean_text(text) == expected


# @pytest.fixture()
# def test_build_rag_context():
#     data = {
#         "forum_text": "‡∏â‡∏±‡∏ô‡∏°‡∏µ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏õ‡∏ß‡∏î‡∏´‡∏±‡∏ß",
#         "doctor_reply": "‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏ß‡∏£‡∏û‡∏±‡∏Å‡∏ú‡πà‡∏≠‡∏ô",
#         "disease_text": "‡πÑ‡∏°‡πÄ‡∏Å‡∏£‡∏ô",
#         "tags": ["‡∏õ‡∏ß‡∏î‡∏´‡∏±‡∏ß", "‡πÑ‡∏°‡πÄ‡∏Å‡∏£‡∏ô"],
#     }
#     result = build_rag_context(data)
#     assert "[‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ]" in result
#     assert "[‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏à‡∏≤‡∏Å‡πÅ‡∏û‡∏ó‡∏¢‡πå]" in result
